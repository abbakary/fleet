# Generated by Django 5.2.7 on 2025-10-03 07:29

import django.core.validators
import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('legal_name', models.CharField(max_length=255)),
                ('contact_email', models.EmailField(max_length=254)),
                ('contact_phone', models.CharField(blank=True, max_length=32)),
                ('address_line1', models.CharField(blank=True, max_length=255)),
                ('address_line2', models.CharField(blank=True, max_length=255)),
                ('city', models.CharField(blank=True, max_length=80)),
                ('state', models.CharField(blank=True, max_length=80)),
                ('postal_code', models.CharField(blank=True, max_length=20)),
                ('country', models.CharField(default='USA', max_length=80)),
                ('notes', models.TextField(blank=True)),
            ],
            options={
                'ordering': ['legal_name'],
            },
        ),
        migrations.CreateModel(
            name='InspectionCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64, unique=True)),
                ('name', models.CharField(max_length=120)),
                ('description', models.TextField(blank=True)),
                ('display_order', models.PositiveIntegerField(default=0)),
            ],
            options={
                'ordering': ['display_order', 'name'],
            },
        ),
        migrations.CreateModel(
            name='InspectorProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('badge_id', models.CharField(max_length=64, unique=True)),
                ('certifications', models.TextField(blank=True)),
                ('is_active', models.BooleanField(default=True)),
                ('max_daily_inspections', models.PositiveIntegerField(default=8)),
            ],
            options={
                'ordering': ['badge_id'],
            },
        ),
        migrations.CreateModel(
            name='Inspection',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('reference', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('in_progress', 'In Progress'), ('submitted', 'Submitted'), ('approved', 'Approved')], default='draft', max_length=20)),
                ('started_at', models.DateTimeField(blank=True, null=True)),
                ('completed_at', models.DateTimeField(blank=True, null=True)),
                ('odometer_reading', models.PositiveIntegerField(default=0)),
                ('general_notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='portal.customer')),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='portal.inspectorprofile')),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='CustomerReport',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('summary', models.TextField()),
                ('recommended_actions', models.TextField(blank=True)),
                ('published_at', models.DateTimeField(auto_now_add=True)),
                ('inspection', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='customer_report', to='portal.inspection')),
            ],
            options={
                'ordering': ['-published_at'],
            },
        ),
        migrations.CreateModel(
            name='ChecklistItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('code', models.CharField(max_length=64)),
                ('title', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True)),
                ('requires_photo', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='items', to='portal.inspectioncategory')),
            ],
            options={
                'ordering': ['category', 'code'],
                'unique_together': {('category', 'code')},
            },
        ),
        migrations.CreateModel(
            name='InspectionItemResponse',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('result', models.CharField(choices=[('pass', 'Pass'), ('fail', 'Fail'), ('not_applicable', 'Not Applicable')], max_length=16)),
                ('severity', models.PositiveSmallIntegerField(default=1, validators=[django.core.validators.MinValueValidator(1), django.core.validators.MaxValueValidator(5)])),
                ('notes', models.TextField(blank=True)),
                ('checklist_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='responses', to='portal.checklistitem')),
                ('inspection', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='item_responses', to='portal.inspection')),
            ],
            options={
                'ordering': ['checklist_item__category__display_order', 'checklist_item__code'],
                'unique_together': {('inspection', 'checklist_item')},
            },
        ),
        migrations.CreateModel(
            name='InspectionPhoto',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(upload_to='inspection_photos/%Y/%m/%d')),
                ('caption', models.CharField(blank=True, max_length=255)),
                ('response', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='photos', to='portal.inspectionitemresponse')),
            ],
            options={
                'ordering': ['created_at'],
            },
        ),
        migrations.CreateModel(
            name='PortalUser',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.CharField(choices=[('admin', 'Admin'), ('inspector', 'Inspector'), ('customer', 'Customer')], max_length=24)),
                ('phone_number', models.CharField(blank=True, max_length=32)),
                ('organization', models.CharField(blank=True, max_length=255)),
                ('job_title', models.CharField(blank=True, max_length=255)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='portal_profile', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Portal User',
                'verbose_name_plural': 'Portal Users',
            },
        ),
        migrations.AddField(
            model_name='inspectorprofile',
            name='profile',
            field=models.OneToOneField(limit_choices_to={'role': 'inspector'}, on_delete=django.db.models.deletion.CASCADE, related_name='inspector_profile', to='portal.portaluser'),
        ),
        migrations.AddField(
            model_name='customer',
            name='profile',
            field=models.OneToOneField(limit_choices_to={'role': 'customer'}, on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to='portal.portaluser'),
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('vin', models.CharField(max_length=32, unique=True)),
                ('license_plate', models.CharField(max_length=20)),
                ('make', models.CharField(max_length=120)),
                ('model', models.CharField(max_length=120)),
                ('year', models.PositiveIntegerField(validators=[django.core.validators.MinValueValidator(1900), django.core.validators.MaxValueValidator(2026)])),
                ('vehicle_type', models.CharField(max_length=120)),
                ('axle_configuration', models.CharField(blank=True, max_length=120)),
                ('mileage', models.PositiveIntegerField(default=0)),
                ('notes', models.TextField(blank=True)),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='portal.customer')),
            ],
            options={
                'ordering': ['customer', 'license_plate'],
            },
        ),
        migrations.AddField(
            model_name='inspection',
            name='vehicle',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inspections', to='portal.vehicle'),
        ),
        migrations.CreateModel(
            name='VehicleAssignment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('scheduled_for', models.DateField()),
                ('status', models.CharField(choices=[('assigned', 'Assigned'), ('in_progress', 'In Progress'), ('completed', 'Completed')], default='assigned', max_length=20)),
                ('remarks', models.TextField(blank=True)),
                ('assigned_by', models.ForeignKey(limit_choices_to={'role': 'admin'}, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_inspections', to='portal.portaluser')),
                ('inspector', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='portal.inspectorprofile')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='assignments', to='portal.vehicle')),
            ],
            options={
                'ordering': ['-scheduled_for'],
            },
        ),
        migrations.AddField(
            model_name='inspection',
            name='assignment',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='inspections', to='portal.vehicleassignment'),
        ),
        migrations.AddIndex(
            model_name='portaluser',
            index=models.Index(fields=['role'], name='portal_port_role_2cb616_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['customer', 'vehicle_type'], name='portal_vehi_custome_a3ee7a_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='vehicleassignment',
            unique_together={('vehicle', 'inspector', 'scheduled_for')},
        ),
        migrations.AddIndex(
            model_name='inspection',
            index=models.Index(fields=['status'], name='portal_insp_status_a88814_idx'),
        ),
        migrations.AddIndex(
            model_name='inspection',
            index=models.Index(fields=['customer', 'created_at'], name='portal_insp_custome_e5b829_idx'),
        ),
    ]
